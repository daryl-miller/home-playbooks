---

- name: Ensure system resolve config directory exists.
  become: true
  file:
    path: /run/systemd/resolve/
    state: directory
  register: containerd_dir

- name: Execute the command in remote shell; stdout goes to the specified file on the remote
  ansible.builtin.shell: ln -s /etc/resolv.conf /run/systemd/resolve/

- include_tasks: disable-swap.yml
- include_tasks: setup-deps.yml

- name: Install Kubernetes packages.
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  notify: restart kubelet
  with_items: "{{ kubernetes_packages }}"

- include_tasks: setup-network.yml

- name: Ensure kubelet is started and enabled at boot.
  service:
    name: kubelet
    state: started
    enabled: true

- name: Check if Kubernetes has already been initialized.
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat

- include_tasks: control-plane-setup.yml
  when: kubernetes_role == 'control_plane'

- name: Get the kubeadm join command from the Kubernetes control plane.
  command: kubeadm token create --print-join-command
  changed_when: false
  when: kubernetes_role == 'control_plane'
  register: kubernetes_join_command_result

- name: Set the kubeadm join command globally.
  set_fact:
    kubernetes_join_command: >
      {{ kubernetes_join_command_result.stdout }}
      {{ kubernetes_join_command_extra_opts }}
  when: kubernetes_join_command_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- include_tasks: node-setup.yml
  when: kubernetes_role == 'node'